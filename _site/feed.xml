<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-01-10T20:06:45+08:00</updated><id>http://localhost:4000/</id><title type="html">Choipun</title><subtitle>与你一起探索未知世界</subtitle><author><name>Choipun</name></author><entry><title type="html">Vue 3 + Tinymce 5 实现富文本编辑器</title><link href="http://localhost:4000/2020/01/vue-tinymce" rel="alternate" type="text/html" title="Vue 3 + Tinymce 5 实现富文本编辑器" /><published>2020-01-10T20:01:00+08:00</published><updated>2020-01-10T20:01:00+08:00</updated><id>http://localhost:4000/2020/01/vue-tinymce</id><content type="html" xml:base="http://localhost:4000/2020/01/vue-tinymce">&lt;p&gt;&lt;a href=&quot;https://www.tiny.cloud/&quot;&gt;Tinymce&lt;/a&gt; 是一个比较多人推荐的富文本编辑器，不过我在用的过程中也是踩了不少坑，这里记录一下。&lt;/p&gt;

&lt;p&gt;官网是提供了和Vue搭配食用的教学的 &lt;a href=&quot;https://www.tiny.cloud/docs/integrations/vue/&quot;&gt;Vue integration&lt;/a&gt;，但是按照这个流程走会有如下提示：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This domain is not registered with Tiny Cloud. Start a free trial to discover our premium cloud services and pro support.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为我实在是懒得注册去获得这个 &lt;code class=&quot;highlighter-rouge&quot;&gt;api-key&lt;/code&gt;，而且这个流程所有的插件都是单独下载的，会发起一堆请求，所以我决定换其他方式来使用。&lt;/p&gt;

&lt;h3 id=&quot;安装&quot;&gt;安装&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install tinymce &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt;
npm install @tinymce/tinymce-vue &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一个是核心文件，一个是官方提供的适配。&lt;/p&gt;

&lt;h3 id=&quot;基础代码&quot;&gt;基础代码&lt;/h3&gt;

&lt;p&gt;结构如下&lt;/p&gt;

&lt;p&gt;HTML&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app-container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;editor&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:init=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;init&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;JS&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Editor&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@tinymce/tinymce-vue'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./config'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Editor&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;lt;p&amp;gt;This is the initial content of the editor&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mounted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;配置文件-config&quot;&gt;配置文件 config&lt;/h3&gt;

&lt;p&gt;基本上还是照着上文提到的 &lt;a href=&quot;https://www.tiny.cloud/docs/integrations/vue/&quot;&gt;Vue integration&lt;/a&gt; 去配置即可，但是有几个注意的地方。&lt;/p&gt;

&lt;p&gt;汉化包、主题样式等静态文件我是直接上传到了服务器当中（并非使用下文的 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env.BASE_URL&lt;/code&gt;），省得考虑本地环境与开发的路径问题。&lt;/p&gt;

&lt;p&gt;如果没有设置，那会默认以 &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:9528&lt;/code&gt; 开头去加载文件，那肯定是找不到文件导致报错了。&lt;/p&gt;

&lt;p&gt;插件在使用之前需要先引入，否则也是会加载远程文件。&lt;/p&gt;

&lt;p&gt;完整配置参考如下：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/themes/silver'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/fullscreen'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/table'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/code'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/help'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/image'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/link'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/preview'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/lists'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tinymce/plugins/searchreplace'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;language_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`/tinymce/zh_CN.js`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'zh_CN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;menubar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;branding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 去水印&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;elementpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 禁用编辑器底部的状态栏&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;statusbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 隐藏编辑器底部的状态栏&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;paste_data_images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 允许粘贴图像&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;skin_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/tinymce/skins/ui/oxide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// skin 路径&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;content_css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/tinymce/skins/content/default/content.min.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// content.css 路径&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'table code help fullscreen image link preview lists searchreplace'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;toolbar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`
    newdocument | undo redo | 
    formatselect | 
    bold italic backcolor | 
    alignleft aligncenter alignright alignjustify | 
    bullist numlist outdent indent | 
    table image link | 
    removeformat searchreplace | 
    code preview fullscreen help
  `&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;销毁&quot;&gt;销毁&lt;/h3&gt;

&lt;p&gt;离开页面之前先销毁现有的 tinymce 实例：&lt;/p&gt;

&lt;p&gt;在 DOM 上面加个 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; 属性&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;editor&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tinymce-editor&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:init=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;init&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;beforeDestroy&lt;/code&gt; 这个生命周期，在离开页面之前销毁实例&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;beforeDestroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tinymce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tinymce-editor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至此也就差不多了，其他根据需求再自定义即可。&lt;/p&gt;

&lt;p&gt;感谢阅读。&lt;/p&gt;</content><author><name>Choipun</name></author><category term="web" /><category term="vue" /><summary type="html">Tinymce 是一个比较多人推荐的富文本编辑器，不过我在用的过程中也是踩了不少坑，这里记录一下。</summary></entry><entry><title type="html">检测域名是否被微信封禁</title><link href="http://localhost:4000/2020/01/wx-long2short" rel="alternate" type="text/html" title="检测域名是否被微信封禁" /><published>2020-01-04T19:33:00+08:00</published><updated>2020-01-04T19:33:00+08:00</updated><id>http://localhost:4000/2020/01/wx-long2short</id><content type="html" xml:base="http://localhost:4000/2020/01/wx-long2short">&lt;p&gt;当域名被微信封禁时，访问的链接会先经过微信服务器检测，如果正常就放行，否则会重定向跳转到下面这个链接（右键在新窗口打开，修改这个链接的参数，有趣的现象会发生）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://weixin110.qq.com/cgi-bin/mmspamsupport-bin/newredirectconfirmcgi?main_type=2&amp;amp;evil_type=20&amp;amp;source=2&amp;amp;url=https://baidu.com&quot;&gt;https://weixin110.qq.com/cgi-bin/mmspamsupport-bin/…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如果我们能够让微信自己的域名经过微信的检测，那么这件事就成了。翻遍了微信官方各种api，功夫不负有心人，找到了「&lt;strong&gt;长链接转短链接接口&lt;/strong&gt;」，可以把我们的链接转成微信自己的链接，这样判断短链接的重定向链接即可得知是否被封禁。&lt;/p&gt;

&lt;p&gt;长链转短链需要三个参数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;action&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;long_url&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关键的问题来了， &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; 是从微信获取来的，获取 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; 需要在微信后台配置白名单，并且每天限额是1000000次 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; 是公众号的全局唯一接口调用凭据，公众号调用各接口时都需使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; 但是，很多网站是没有公众号的，或者说100万的调用次数都不够我挥霍的，那怎么办？答案是我们可以使用微信公众平台测试账号，它的优势是无需公众帐号、快速申请接口（只要有微信号就可以），可以直接体验和测试公众平台所有高级接口功能，而且不需要绑定ip白名单也可以获得 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt; ，最大的优势是长链转短链的服务貌似没有调用次数限制（我亲测试了很多，发现使用次数并没有变化，虽然文档上写了1000次）。&lt;/p&gt;

&lt;p&gt;微信公众平台测试账号链接：&lt;a href=&quot;https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;amp;t=sandbox/index&quot;&gt;https://mp.weixin.qq.com/debug/…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;所有的准备工作已经ready，那么可以show代码了获取 &lt;code class=&quot;highlighter-rouge&quot;&gt;access_token&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 根据appid和app appsecret来获取acess_token
 * return @param {String}
 */
async getAccessToken() {
    let query = {
        appid: this.appid,
        secret: this.appsecret,
        grant_type: 'client_credential'
    };
     
    let url = `https://api.weixin.qq.com/cgi-bin/token?${querystring.stringify(query)}`;
    return await this.request(url);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;长链转短链&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 通过微信api生成短链
 * @param {String} req_url 待检测url
 */
async createShortUrl(req_url) {
    var requestData = {
        &quot;access_token&quot;: this.access_token,
        &quot;action&quot;: &quot;long2short&quot;,
        &quot;long_url&quot;: req_url
    }
    const url = `https://api.weixin.qq.com/cgi-bin/shorturl?access_token=${this.access_token}`;
    let body = await this.request(url, {
        method: &quot;POST&quot;,
        json: true,
        headers: {
            &quot;content-type&quot;: &quot;application/json&quot;,
        },
        body: requestData
    });
 
 
    return body &amp;amp;&amp;amp; body.short_url;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;检测重定向链接来判断是否被微信封禁&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 根据重定向之后的host是否为weixin110.qq.com来检测url是否被微信封禁
 * @param {String} url 待检测短链接url
 */
checkDomainBanned(url) {
    return new Promise(function (resolve, reject) {
        return request(url, function(err, res, body) {
            if (!err) {
                if (res &amp;amp;&amp;amp; res.request &amp;amp;&amp;amp; res.request.uri &amp;amp;&amp;amp; res.request.uri.host === 'weixin110.qq.com') {
                    resolve({ code: -1, msg: 'banned' });
                } else {
                    resolve({ code: 0, msg: 'ok' });
                }
            } else {
                reject(err);
            }
        })
    })
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;致谢&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;知乎作者：唐静鑫&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Choipun</name></author><category term="web" /><category term="security" /><summary type="html">当域名被微信封禁时，访问的链接会先经过微信服务器检测，如果正常就放行，否则会重定向跳转到下面这个链接（右键在新窗口打开，修改这个链接的参数，有趣的现象会发生）</summary></entry><entry><title type="html">Lumen 设置 CORS 实现跨域的配置</title><link href="http://localhost:4000/2019/12/lumen-cors-middleware" rel="alternate" type="text/html" title="Lumen 设置 CORS 实现跨域的配置" /><published>2019-12-02T16:36:00+08:00</published><updated>2019-12-02T16:36:00+08:00</updated><id>http://localhost:4000/2019/12/lumen-cors-middleware</id><content type="html" xml:base="http://localhost:4000/2019/12/lumen-cors-middleware">&lt;p&gt;本文主要记录使用中间件来解决的方案。&lt;/p&gt;

&lt;p&gt;创建 &lt;strong&gt;app/Http/Middleware/Cors.php&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Http\Middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Closure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cors&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;/**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Closure&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Access-Control-Allow-Origin'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Access-Control-Allow-Methods'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GET, POST, PUT, DELETE, OPTIONS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Access-Control-Allow-Headers'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Access-Control-Request-Headers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Access-Control-Allow-Credentials'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//允许客户端发送cookie
&lt;/span&gt;            &lt;span class=&quot;s1&quot;&gt;'Access-Control-Max-Age'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1728000&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//该字段可选，用来指定本次预检请求的有效期，在此期间，不用发出另一条预检请求。
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withHeaders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注册路由中间件 &lt;strong&gt;bootstrap/app.php&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routeMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'cors'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;App\Http\Middleware\Cors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ... 其他中间件
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在需要跨域的路由上使用中间件 &lt;strong&gt;routes/web.php&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$router&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'middleware'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cors'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Choipun</name></author><category term="web" /><summary type="html">本文主要记录使用中间件来解决的方案。</summary></entry><entry><title type="html">Vue CLI 3 + Laravel 混合部署</title><link href="http://localhost:4000/2019/11/laravel-vue-develope" rel="alternate" type="text/html" title="Vue CLI 3 + Laravel 混合部署" /><published>2019-11-18T21:16:00+08:00</published><updated>2019-11-18T21:16:00+08:00</updated><id>http://localhost:4000/2019/11/laravel-vue-develope</id><content type="html" xml:base="http://localhost:4000/2019/11/laravel-vue-develope">&lt;h2 id=&quot;需求说明&quot;&gt;需求说明&lt;/h2&gt;

&lt;p&gt;使用 Laravel 提供 API 服务，并使用 Vue CLI 构建前端页面。最终生成的静态页面作为 Laravel 的模板。&lt;/p&gt;

&lt;h2 id=&quot;过程&quot;&gt;过程&lt;/h2&gt;

&lt;p&gt;使用 Laravel 命令创建项目并进入项目文件夹。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Laravel new my-project
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my-project
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 Laravel 项目文件夹中移除前端脚手架，并创建 Vue 项目&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; package.json webpack.mix.js yarn.lock resources/assets
vue create frontend
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建 &lt;strong&gt;frontend/vue.config.js&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 在开发期间设置代理转发API请求&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://laracon.test'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 输出构建好的静态文件到 Laravel 的 public 目录下&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;outputDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../public'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 修改生成的 HTML 文件的位置，确保只在生产环境才这样&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;indexPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'production'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../resources/views/index.blade.php'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;frontend/package.json&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;scripts&quot;: {
  &quot;serve&quot;: &quot;vue-cli-service serve&quot;,
&lt;span class=&quot;gd&quot;&gt;- &quot;build&quot;: &quot;vue-cli-service build&quot;,
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+ &quot;build&quot;: &quot;rm -rf ../public/{js,css,img} &amp;amp;&amp;amp; vue-cli-service build --no-clean&quot;,
&lt;/span&gt;  &quot;lint&quot;: &quot;vue-cli-service lint&quot;
},
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置 Laravel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;routes/web.php&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SpaController@index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;app/Http/Controllers/SpaController.php&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App\Http\Controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpaController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;参考与致谢：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yyx990803/laravel-vue-cli-3&quot;&gt;Laravel + Vue CLI 3&lt;/a&gt;&lt;/p&gt;</content><author><name>Choipun</name></author><category term="web" /><category term="vue" /><summary type="html">需求说明</summary></entry><entry><title type="html">配置 Nginx 支持动态证书加载</title><link href="http://localhost:4000/2019/08/nginx-dynamic-ssl" rel="alternate" type="text/html" title="配置 Nginx 支持动态证书加载" /><published>2019-08-12T17:18:00+08:00</published><updated>2019-08-12T17:18:00+08:00</updated><id>http://localhost:4000/2019/08/nginx-dynamic-ssl</id><content type="html" xml:base="http://localhost:4000/2019/08/nginx-dynamic-ssl">&lt;blockquote&gt;
  &lt;p&gt;注：本文 Nginx 版本为 &lt;code class=&quot;highlighter-rouge&quot;&gt;1.16&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最近有个需求是这样的：有任意域名解析到服务器中，希望服务器不做域名绑定，也可访问到我们设置的默认站点，并支持以 https 来访问。由于有的域名是有购买证书的，有的域名没有，又需要绑定到同一个站点上，因此就需要 nginx 能支持证书的动态加载。&lt;/p&gt;

&lt;p&gt;设置默认站点，并监听443端口，记得防火墙放行443端口。&lt;/p&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssl&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http2&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;动态加载证书文件&lt;/p&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ssl_certificate&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;/home/ssl/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ssl_server_name&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.crt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ssl_certificate_key&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;/home/ssl/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ssl_server_name&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ssl_protocols&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TLSv1.1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TLSv1.2&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TLSv1.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ssl_ciphers&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ssl_session_cache&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;shared:SSL:10m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ssl_session_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;error_page&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;497&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host$request_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过上面的代码片段可知，主要是依赖于 &lt;code class=&quot;highlighter-rouge&quot;&gt;$ssl_server_name&lt;/code&gt; 这个变量。&lt;/p&gt;

&lt;p&gt;当用户以 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://&lt;/code&gt; 开头访问站点时，他能根据当前的受访域名，去指定目录下查找对应的证书文件，若存在，则加载证书，否则提示连接失败。&lt;/p&gt;

&lt;p&gt;而以普通形式 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://&lt;/code&gt; 访问则不受影响。&lt;/p&gt;</content><author><name>Choipun</name></author><category term="server" /><summary type="html">注：本文 Nginx 版本为 1.16</summary></entry><entry><title type="html">将某个元素固定在页面上</title><link href="http://localhost:4000/2019/03/pinit-js" rel="alternate" type="text/html" title="将某个元素固定在页面上" /><published>2019-03-18T13:12:00+08:00</published><updated>2019-03-18T13:12:00+08:00</updated><id>http://localhost:4000/2019/03/pinit-js</id><content type="html" xml:base="http://localhost:4000/2019/03/pinit-js">&lt;p&gt;最近在尝试改版博客，希望当文章内容导航栏滑动到顶部的时候，始终固定，不随文档滚动。&lt;/p&gt;

&lt;p&gt;主要思路就是监听 &lt;code class=&quot;highlighter-rouge&quot;&gt;scroll&lt;/code&gt; 事件，获取当前文档滚动的高度，再改变导航栏的 &lt;code class=&quot;highlighter-rouge&quot;&gt;position&lt;/code&gt; 属性为 &lt;code class=&quot;highlighter-rouge&quot;&gt;fixed&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;relative&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;关于文档滚动高度的获取，各个浏览器存在一定的兼容性差异，主要可以取以下三个值。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrolltop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageYOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; 
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; 
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;乍一看没什么问题，实际在PC端各浏览器里看效果也确实没有遇到什么问题，直到我在手机QQ自带的浏览器里打开来看效果才发现，滑动效果没有办法&lt;strong&gt;实时触发&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;想起来 &lt;a href=&quot;http://www.bootcss.com/&quot;&gt;bootcss&lt;/a&gt; 已经有个插件 &lt;a href=&quot;http://www.bootcss.com/p/jquery.pin/&quot;&gt;jQuery.Pin&lt;/a&gt; 实现了这种效果，但是同样没有解决这个问题，另一方面，为了这么个小功能要额外引入个 jQuery 显得有些没必要。&lt;/p&gt;

&lt;p&gt;直到我在搜索着其他插件的解决方案时，发现了一个 CSS 属性 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: sticky&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;单词sticky的中文意思是「粘性的」，&lt;code class=&quot;highlighter-rouge&quot;&gt;position: sticky&lt;/code&gt; 表现也符合这个粘性的表现。基本上，可以看出是 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: fixed&lt;/code&gt; 的结合体：当元素在屏幕内，表现为 &lt;code class=&quot;highlighter-rouge&quot;&gt;relative&lt;/code&gt;，就要滚出显示器屏幕的时候，表现为 &lt;code class=&quot;highlighter-rouge&quot;&gt;fixed&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;一番尝试后发现，一行代码即可解决各种痛点，无需使用 JS，简直酸爽。&lt;/p&gt;

&lt;p&gt;不过这是个兼容属性，有的浏览器尚不支持。因此如果非要各个浏览器都兼容，还需要借助 JS 对于不支持 sticky 的浏览器使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: fixed&lt;/code&gt; 来解决。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考与致谢&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.alloyteam.com/2017/04/secrets-of-mobile-web-scroll-bars-and-drop-refresh/&quot;&gt;移动web之滚动篇&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html&quot;&gt;用Javascript获取页面元素的位置&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://caniuse.com/#search=sticky&quot;&gt;Can I use sticky?&lt;/a&gt;&lt;/p&gt;</content><author><name>Choipun</name></author><category term="web" /><summary type="html">最近在尝试改版博客，希望当文章内容导航栏滑动到顶部的时候，始终固定，不随文档滚动。</summary></entry><entry><title type="html">在 Vue 项目中使用 Web Worker</title><link href="http://localhost:4000/2018/11/web-worker-in-vue" rel="alternate" type="text/html" title="在 Vue 项目中使用 Web Worker" /><published>2018-11-23T16:36:00+08:00</published><updated>2018-11-23T16:36:00+08:00</updated><id>http://localhost:4000/2018/11/web-worker-in-vue</id><content type="html" xml:base="http://localhost:4000/2018/11/web-worker-in-vue">&lt;p&gt;TODO&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://github.com/israelss/simple-web-worker/blob/master/src/createDisposableWorker.js&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Choipun</name></author><category term="web" /><summary type="html">TODO</summary></entry><entry><title type="html">Vue CLI 3 + Socket.io 配置记录</title><link href="http://localhost:4000/2018/07/Vue-cli-3.0-socket.io" rel="alternate" type="text/html" title="Vue CLI 3 + Socket.io 配置记录" /><published>2018-07-14T21:16:00+08:00</published><updated>2018-07-14T21:16:00+08:00</updated><id>http://localhost:4000/2018/07/Vue-cli-3.0-socket.io</id><content type="html" xml:base="http://localhost:4000/2018/07/Vue-cli-3.0-socket.io">&lt;h2 id=&quot;创建&quot;&gt;创建&lt;/h2&gt;

&lt;p&gt;创建项目使用如下命令&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vue create project-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我是手动安装了下列依赖：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Babel&lt;/li&gt;
  &lt;li&gt;Router&lt;/li&gt;
  &lt;li&gt;Vuex&lt;/li&gt;
  &lt;li&gt;CSS Pre-processors&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;语法检查啥的，为了开发方便我是暂时略过（已经体验过被 Eslint 支配的恐惧）&lt;/p&gt;

&lt;p&gt;开发环境&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm run serve &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;添加 &lt;code class=&quot;highlighter-rouge&quot;&gt;--open&lt;/code&gt; 意思是直接打开浏览器&lt;/p&gt;

&lt;p&gt;构建模式&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;后面可以指定跟上 &lt;code class=&quot;highlighter-rouge&quot;&gt;--dest&lt;/code&gt; 指定输出目录 (默认值：&lt;code class=&quot;highlighter-rouge&quot;&gt;dist&lt;/code&gt;)&lt;/p&gt;

&lt;h3 id=&quot;修改输出目录&quot;&gt;修改输出目录&lt;/h3&gt;

&lt;p&gt;通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue.config.js&lt;/code&gt; 来配置&lt;/p&gt;

&lt;p&gt;pc端&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;outputDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../application/views/index/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;assetsDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../../static-pc/'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;移动端&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;outputDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../application/views/mobile/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;assetsDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../../../static-mobile/'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;axios&quot;&gt;axios&lt;/h2&gt;

&lt;p&gt;同样的先另外下载 &lt;code class=&quot;highlighter-rouge&quot;&gt;axios&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; axios
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接着在 &lt;code class=&quot;highlighter-rouge&quot;&gt;main.js&lt;/code&gt; 中配置，引入 &lt;code class=&quot;highlighter-rouge&quot;&gt;axios&lt;/code&gt; 并添加到 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vue&lt;/code&gt; 的原型上&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'axios'&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后就可以用这样的形式来请求数据&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/user/list/?r=1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;跨域问题&quot;&gt;跨域问题&lt;/h3&gt;

&lt;p&gt;通过设置开发环境代理来解决&lt;/p&gt;

&lt;p&gt;修改 vue-cli 根目录下的 vue.config.js（没有这个文件就新建一个），写入以下内容&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.telechat.ap'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;proxy&lt;/code&gt; 里面的内容改成自己后端运行环境的地址&lt;/p&gt;

&lt;h2 id=&quot;router&quot;&gt;Router&lt;/h2&gt;

&lt;p&gt;PC端页面为了开发方便，并未使用路由功能。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;因为页面首次渲染需要由PHP获取路由当中的房间号 &lt;code class=&quot;highlighter-rouge&quot;&gt;/?r=xxx&lt;/code&gt; 信息，从而判断房间号是否真实有效&lt;/li&gt;
  &lt;li&gt;使用了路由功能导致地址栏变为 &lt;code class=&quot;highlighter-rouge&quot;&gt;/#/?r=xxx&lt;/code&gt; 会使得PHP无法获取该参数。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;登录、注册等页面均是以组件模式嵌入主页模板中，因此不用路由并无影响。&lt;/p&gt;

&lt;p&gt;移动端若是不方便改为这种形式，那么可以在加载完成之后，手动向服务端发送房间号，根据返回结果决定是否继续显示后续逻辑。&lt;/p&gt;

&lt;p&gt;具体接口、参数再议。&lt;/p&gt;

&lt;h2 id=&quot;vuex&quot;&gt;Vuex&lt;/h2&gt;

&lt;p&gt;Vuex是本项目的核心功能。&lt;/p&gt;

&lt;p&gt;配置方式基本没有变化，不需要写入 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vue&lt;/code&gt; 的原型中，就可以直接在项目中使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.$store&lt;/code&gt; 来访问&lt;/p&gt;

&lt;p&gt;为了直观清晰，最好是分成若干小模块来写这部分内容。例如&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespaced&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mutations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespaced&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mutations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  	&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vuex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上文添加了 &lt;code class=&quot;highlighter-rouge&quot;&gt;namespaced &lt;/code&gt; 属性来方便地引用各个模块的内容。&lt;/p&gt;

&lt;p&gt;为了方便跟踪 &lt;code class=&quot;highlighter-rouge&quot;&gt;socket.io&lt;/code&gt; 事件，需要将通讯相关功能写在状态管理当中，下文详细说明。&lt;/p&gt;

&lt;h2 id=&quot;socketio&quot;&gt;Socket.io&lt;/h2&gt;

&lt;p&gt;首先安装依赖&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; socket.io-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在状态管理的配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;src/store.js&lt;/code&gt; 中引入&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'socket.io-client'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Socket.io 与 Vuex 该如何联动，如何在各个模块外部也能读取/调用模块内的内容，下面是一个例子：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 定义一个 socks 模块&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespaced&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 实例化&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vuex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;socks&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 通过 store 来访问模块内的内容&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'socks/sayHello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看控制台，看到显示了 &lt;code class=&quot;highlighter-rouge&quot;&gt;hello world&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;既然可以在外部调用，那么就可以放在 socket.io 的各个事件中执行了，例如&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://socket.heloves.me?r=1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'connect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'socks/sayHello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;公共函数&quot;&gt;公共函数&lt;/h2&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;src/assets/js&lt;/code&gt; 目录下建立个 &lt;code class=&quot;highlighter-rouge&quot;&gt;utils.js&lt;/code&gt;（或其他命名） 写入以下内容&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;charCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nameFix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hi'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;charCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;nameFix&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在需要使用的地方引入，例如&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameFix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@/assets/js/utils'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;表示只引入 &lt;code class=&quot;highlighter-rouge&quot;&gt;nameFix&lt;/code&gt; 函数，多个函数则以逗号 &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt; 分隔&lt;/p&gt;

&lt;p&gt;若是作为 &lt;code class=&quot;highlighter-rouge&quot;&gt;filters&lt;/code&gt; 使用&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameFix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@/assets/js/utils'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;nameFix&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后就可以在 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; 片段中以过滤器的方式使用&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{{ user.username | nameFix }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其他公共函数的使用方式以此类推。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;参考文档： &lt;a href=&quot;https://cli.vuejs.org/config/#global-cli-config&quot;&gt;https://cli.vuejs.org/config/#global-cli-config&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Choipun</name></author><category term="socket.io" /><category term="vue" /><summary type="html">创建</summary></entry><entry><title type="html">Socket.io 在服务器上的部署记录</title><link href="http://localhost:4000/2018/06/websocket-im" rel="alternate" type="text/html" title="Socket.io 在服务器上的部署记录" /><published>2018-06-27T15:33:00+08:00</published><updated>2018-06-27T15:33:00+08:00</updated><id>http://localhost:4000/2018/06/websocket-im</id><content type="html" xml:base="http://localhost:4000/2018/06/websocket-im">&lt;ul&gt;
  &lt;li&gt;operating system: Centos&lt;/li&gt;
  &lt;li&gt;server: Nginx and Nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;启动-websocket-服务&quot;&gt;启动 WebSocket 服务&lt;/h2&gt;

&lt;p&gt;挂起&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nohup node index.js &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看进程 MacOS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果无法找到，就使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt; 命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ps -aux|grep index.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关闭进程&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;pid]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nginx-配置反向代理&quot;&gt;Nginx 配置反向代理&lt;/h2&gt;

&lt;p&gt;以下配置还升级了协议，从 &lt;code class=&quot;highlighter-rouge&quot;&gt;ws://&lt;/code&gt; 升级为 &lt;code class=&quot;highlighter-rouge&quot;&gt;wss://&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;需要域名本身开启了SSL&lt;/p&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;        
  &lt;span class=&quot;c1&quot;&gt;# 此处改为 socket.io 后端的 ip 和端口即可
&lt;/span&gt;  &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://127.0.0.1:5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Upgrade&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$http_upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;upgrade&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;proxy_http_version&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Forwarded-For&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Choipun</name></author><category term="socket.io" /><summary type="html">operating system: Centos server: Nginx and Nodejs</summary></entry><entry><title type="html">基于 Vue CLI 的全栈开发记录</title><link href="http://localhost:4000/2018/01/vue-cli-full-stack" rel="alternate" type="text/html" title="基于 Vue CLI 的全栈开发记录" /><published>2018-01-01T21:30:00+08:00</published><updated>2018-01-01T21:30:00+08:00</updated><id>http://localhost:4000/2018/01/vue-cli-full-stack</id><content type="html" xml:base="http://localhost:4000/2018/01/vue-cli-full-stack">&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;调试接口跨域问题&lt;/li&gt;
  &lt;li&gt;axios 全局配置&lt;/li&gt;
  &lt;li&gt;直接数据渲染&lt;/li&gt;
  &lt;li&gt;vuex管理登录状态&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;window.isDev = isNaN(Number('&amp;lt;?= 1 ?&amp;gt;'))&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;SSE长连接&lt;/li&gt;
  &lt;li&gt;Eslint 排除检查&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;调试接口跨域问题&quot;&gt;调试接口跨域问题&lt;/h2&gt;

&lt;p&gt;安装 vue-cli 时选的是默认模板 webpack&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; vue-cli
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vue init webpack project
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;project
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;首先需要面对的问题是跨域，搜索一番，可以使用基于 node.js 的代理中间件 &lt;a href=&quot;https://github.com/chimurai/http-proxy-middleware#http-proxy-middleware&quot;&gt;http-proxy-middleware&lt;/a&gt; 来解决问题。
在应用目录下 &lt;code class=&quot;highlighter-rouge&quot;&gt;/config/index.js&lt;/code&gt; 中，作者已经预留了配置项 &lt;code class=&quot;highlighter-rouge&quot;&gt;proxyTable: {}&lt;/code&gt;，往这里面填东西就好了。&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;proxyTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'/api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;changeOrigin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pathRewrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'^/api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/api'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在开发环境中，由 node.js 拦截一切 &lt;code class=&quot;highlighter-rouge&quot;&gt;/api&lt;/code&gt; 的请求，并代理访问 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.test.com/api&lt;/code&gt; 将数据返回给前端。&lt;/p&gt;

&lt;p&gt;例如&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/api/user?id=123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实际访问的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.test.com/api/user?id=123&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;axios-全局配置&quot;&gt;axios 全局配置&lt;/h2&gt;

&lt;p&gt;由于一直使用的 &lt;code class=&quot;highlighter-rouge&quot;&gt;vue-resource&lt;/code&gt; 已不再维护更新，所以转投 &lt;a href=&quot;https://github.com/axios/axios&quot;&gt;axios&lt;/a&gt; 的怀抱。
作为一个高频使用插件，在每次需要用到 &lt;code class=&quot;highlighter-rouge&quot;&gt;axios&lt;/code&gt; 的时候都 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 一次也是挺麻烦的，所以可以直接写进 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vue&lt;/code&gt; 的原型里&lt;/p&gt;

&lt;p&gt;打开入口文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main.js&lt;/code&gt; 添加&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'axios'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就可以使用在任意模板文件中使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.$http&lt;/code&gt; 来代替 &lt;code class=&quot;highlighter-rouge&quot;&gt;axios&lt;/code&gt; 了。&lt;/p&gt;

&lt;h2 id=&quot;直接数据渲染&quot;&gt;直接数据渲染&lt;/h2&gt;

&lt;p&gt;实际应用场景中，还是有许多免不了需要由 PHP 直接将数据渲染到页面上的时候，例如 &lt;code class=&quot;highlighter-rouge&quot;&gt;csrf-token&lt;/code&gt; 以及 &lt;code class=&quot;highlighter-rouge&quot;&gt;session&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;vue-cli 构建环境依赖于 node.js，而 PHP 又运行于 apache，开发环境直接渲染是不可能了，只能将数据渲染到生成的生产环境模板页面中。&lt;/p&gt;

&lt;p&gt;修改配置文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;/config/index.js&lt;/code&gt; 将生成的文件扩展名改为 &lt;code class=&quot;highlighter-rouge&quot;&gt;.php&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../dist/index.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有需要 PHP 直接渲染的数据，写在项目目录下的模板文件 index.html 中&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;?= 1 ?&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;例如上述代码中，由于 node.js 不能识别 PHP 代码，所以可以用这种方式来判断当前是处于生产环境还是开发环境。&lt;/p&gt;

&lt;p&gt;回到一开始的问题，比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;session&lt;/code&gt; 验证，在模板上添加了 &lt;code class=&quot;highlighter-rouge&quot;&gt;csrf-token&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;csrf-token&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;?= $_SESSION['csrf-token'] ?&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;开发环境当中，发送请求的时候带上这个 token&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/api/post?action=add'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'csrf-token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'meta[name=&quot;csrf-token&quot;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将会直接把 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;?= $_SESSION['csrf-token'] ?&amp;gt;&lt;/code&gt; 作为普通字符串发送到服务端，而不是具体的 token 值。&lt;/p&gt;

&lt;p&gt;我想到的方案是：由于前后端/数据库部署在本机上，所以可以判断请求来源，不对来自 &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; 的请求做拦截处理。上线之后这种方案要被伪造，只能是攻击者登录到了服务器上面去吧？不过攻击者都登录服务器了，还伪造这玩意儿干嘛……&lt;/p&gt;

&lt;p&gt;对于后端部分不在本机的，只能老老实实 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 之后发布到线上测试了。或者调试期间后端同学关闭掉相关验证，测试没问题了发布线上的时候再开启验证。&lt;/p&gt;

&lt;h2 id=&quot;eslint-排除检查&quot;&gt;Eslint 排除检查&lt;/h2&gt;

&lt;p&gt;安装 vur-cli 的时候一个手抖，开启了 &lt;a href=&quot;https://eslint.org/&quot;&gt;Eslint&lt;/a&gt; 语法检查，刚开始的时候没有适应他的规则，感觉自己好像一下子都不会写代码了。&lt;/p&gt;

&lt;p&gt;适应一段时间，上手了感觉就没啥问题。不过，自己能按照 Eslint 规则来写，插件未必呀～所以当引入某些插件的时候，控制台 warning 停不下来！！！把插件改成符合 Eslint 规范的格式？别闹了……&lt;/p&gt;

&lt;p&gt;第三方插件都是放在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/assets/libs&lt;/code&gt; 目录下，所以必须排除掉对这个文件夹的内容做检查&lt;/p&gt;

&lt;p&gt;打开 .eslintignore 把路径添加进去&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/src/assets/libs/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;世界瞬间就清净了。&lt;/p&gt;

&lt;h2 id=&quot;实时数据推送&quot;&gt;实时数据推送&lt;/h2&gt;

&lt;p&gt;后台系统中有一项审核功能，运营人员希望在活动推广期间能实时获得新消息提醒，告诉运营有多少条待审核数据，而不需要自己去定时刷新页面。&lt;/p&gt;

&lt;p&gt;作为一个有逼格的开发者，当然不会使用客户端定时轮询的方式来获取更新，我所想到的有以下方式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;websocket&lt;/li&gt;
  &lt;li&gt;SSE + 长连接&lt;/li&gt;
  &lt;li&gt;LeanCloud LiveQuery 实现&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;虽说 &lt;code class=&quot;highlighter-rouge&quot;&gt;websocket&lt;/code&gt; 很强大，但是开发门槛摆在那里，只是为了这个小功能而花费那么大的精力没什么必要。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SSE&lt;/code&gt; 即 &lt;code class=&quot;highlighter-rouge&quot;&gt;server send event&lt;/code&gt;（服务端发送事件）是一开始选择的方案。实现逻辑如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;客户端发起请求&lt;/li&gt;
  &lt;li&gt;服务端挂起该请求&lt;/li&gt;
  &lt;li&gt;服务端定时获取数据库的数据并比对结果，当数据发生变化的时候发送数据到前端&lt;/li&gt;
  &lt;li&gt;前端接收到更新更改显示的状态&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;主要解决了前端代码不够优雅的问题，一次请求，就能获得源源不断的数据推送。&lt;/p&gt;

&lt;p&gt;不过嘛，其实就是把客户端定时轮询交给了后端去做，依旧没有解决性能浪费的问题。而且当客户端关闭之后，服务端还一直 hold 住这个请求不能及时关闭也是挺傻的。&lt;/p&gt;

&lt;p&gt;好在这是用于后台系统，同时只会有一两个运营人员做审核工作。若是用于并发量大一些的场景无疑就是捉襟见肘了。&lt;/p&gt;

&lt;p&gt;一开始不用 &lt;a href=&quot;https://leancloud.cn/docs/livequery-guide.html&quot;&gt;LiveQuery&lt;/a&gt; 主要是不想将这种小功能分离到第三方平台去做，但权衡利弊，LiveQuery 基于 &lt;code class=&quot;highlighter-rouge&quot;&gt;websocket&lt;/code&gt; 实现，看起来就很靠谱的样子啊。照着&lt;a href=&quot;https://leancloud.cn/docs/livequery-guide.html&quot;&gt;官方文档&lt;/a&gt;实现，没什么问题，就成了现在所使用的方案。&lt;/p&gt;</content><author><name>Choipun</name></author><category term="web" /><category term="vue" /><summary type="html">概要</summary></entry></feed>